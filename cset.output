Grammar

    0 $accept: program $end

    1 program: outset

    2 outset: outset function
    3       | declaration ';'
    4       | function

    5 function: type ID '(' arglist ')' compoundstmt
    6         | error '}'

    7 arglist: arglistlist
    8        | %empty

    9 arglistlist: arglist ',' arg
   10            | arg

   11 arg: type ID
   12    | error ' '

   13 compoundstmt: '{' stmtlist '}'

   14 type: K_INT
   15     | K_FLOAT
   16     | K_CHAR
   17     | K_BOOL
   18     | K_SET DOUBLE_BR_OP type DOUBLE_BR_CL
   19     | K_PAIR DOUBLE_BR_OP type ',' type DOUBLE_BR_CL

   20 stmtlist: stmt stmtlist
   21         | stmt

   22 stmt: whilestmt
   23     | expr ';'
   24     | ifstmt
   25     | compoundstmt
   26     | declaration ';'
   27     | io ';'
   28     | returnstmt ';'

   29 whilestmt: K_WHILE '(' expr ')' stmt
   30          | error '}'

   31 ifstmt: K_IF '(' expr ')' compoundstmt
   32       | K_IF '(' expr ')' compoundstmt elsepart

   33 elsepart: K_ELSE stmt

   34 declaration: type attr
   35            | type identlist
   36            | error ';'

   37 io: K_PRINT '(' STR ')'
   38   | K_PRINT '(' ID ')'
   39   | K_READ '(' ID ')'

   40 returnstmt: K_RETURN expr

   41 expr: attr
   42     | rvalue
   43     | funccall

   44 attr: ID '=' expr

   45 identlist: identlistlist
   46          | %empty

   47 identlistlist: identlist ',' ID
   48              | ID

   49 rvalue: rvalue compare logicalor
   50       | logicalor

   51 compare: COMPARE
   52        | '<'
   53        | '>'
   54        | LE
   55        | GE
   56        | DIFFERENCE

   57 logicalor: logicaland LOGICAL_OR logicalor
   58          | logicaland

   59 logicaland: pertinence LOGICAL_AND logicaland
   60           | pertinence

   61 pertinence: pertinence PERTINENCE cartesian
   62           | cartesian

   63 cartesian: cartesian CARTESIAN addition
   64          | addition

   65 addition: addition '+' multiplication
   66         | addition '-' multiplication
   67         | multiplication

   68 multiplication: multiplication '*' term
   69               | multiplication '/' term
   70               | term

   71 term: '(' expr ')'
   72     | '-' term
   73     | '+' term
   74     | '$' term
   75     | '!' term
   76     | '{' factorlist '}'
   77     | '(' pair ')'
   78     | factor

   79 factor: ID
   80       | BOOL_VALUE
   81       | INT_VALUE
   82       | FLOAT_VALUE
   83       | CHAR_VALUE

   84 factorlist: factorlist ',' factor
   85           | factor
   86           | %empty

   87 pair: factor ',' factor

   88 funccall: ID '(' identlist ')'


Terminals, with rules where they appear

$end (0) 0
' ' (32) 12
'!' (33) 75
'$' (36) 74
'(' (40) 5 29 31 32 37 38 39 71 77 88
')' (41) 5 29 31 32 37 38 39 71 77 88
'*' (42) 68
'+' (43) 65 73
',' (44) 9 19 47 84 87
'-' (45) 66 72
'/' (47) 69
';' (59) 3 23 26 27 28 36
'<' (60) 52
'=' (61) 44
'>' (62) 53
'{' (123) 13 76
'}' (125) 6 13 30 76
error (256) 6 12 30 36
STR (258) 37
ID (259) 5 11 38 39 44 47 48 79 88
K_INT (260) 14
K_FLOAT (261) 15
K_CHAR (262) 16
K_BOOL (263) 17
K_SET (264) 18
K_PAIR (265) 19
K_WHILE (266) 29
K_IF (267) 31 32
K_ELSE (268) 33
K_PRINT (269) 37 38
K_READ (270) 39
K_RETURN (271) 40
BOOL_VALUE (272) 80
INT_VALUE (273) 81
FLOAT_VALUE (274) 82
CHAR_VALUE (275) 83
DOUBLE_BR_OP (276) 18 19
DOUBLE_BR_CL (277) 18 19
COMPARE (278) 51
DIFFERENCE (279) 56
LE (280) 54
GE (281) 55
LOGICAL_OR (282) 57
LOGICAL_AND (283) 59
PERTINENCE (284) 61
CARTESIAN (285) 63


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
outset (49)
    on left: 2 3 4, on right: 1 2
function (50)
    on left: 5 6, on right: 2 4
arglist (51)
    on left: 7 8, on right: 5 9
arglistlist (52)
    on left: 9 10, on right: 7
arg (53)
    on left: 11 12, on right: 9 10
compoundstmt (54)
    on left: 13, on right: 5 25 31 32
type (55)
    on left: 14 15 16 17 18 19, on right: 5 11 18 19 34 35
stmtlist (56)
    on left: 20 21, on right: 13 20
stmt (57)
    on left: 22 23 24 25 26 27 28, on right: 20 21 29 33
whilestmt (58)
    on left: 29 30, on right: 22
ifstmt (59)
    on left: 31 32, on right: 24
elsepart (60)
    on left: 33, on right: 32
declaration (61)
    on left: 34 35 36, on right: 3 26
io (62)
    on left: 37 38 39, on right: 27
returnstmt (63)
    on left: 40, on right: 28
expr (64)
    on left: 41 42 43, on right: 23 29 31 32 40 44 71
attr (65)
    on left: 44, on right: 34 41
identlist (66)
    on left: 45 46, on right: 35 47 88
identlistlist (67)
    on left: 47 48, on right: 45
rvalue (68)
    on left: 49 50, on right: 42 49
compare (69)
    on left: 51 52 53 54 55 56, on right: 49
logicalor (70)
    on left: 57 58, on right: 49 50 57
logicaland (71)
    on left: 59 60, on right: 57 58 59
pertinence (72)
    on left: 61 62, on right: 59 60 61
cartesian (73)
    on left: 63 64, on right: 61 62 63
addition (74)
    on left: 65 66 67, on right: 63 64 65 66
multiplication (75)
    on left: 68 69 70, on right: 65 66 67 68 69
term (76)
    on left: 71 72 73 74 75 76 77 78, on right: 68 69 70 72 73 74 75
factor (77)
    on left: 79 80 81 82 83, on right: 78 84 85 87
factorlist (78)
    on left: 84 85 86, on right: 76 84
pair (79)
    on left: 87, on right: 77
funccall (80)
    on left: 88, on right: 43


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    program      go to state 8
    outset       go to state 9
    function     go to state 10
    type         go to state 11
    declaration  go to state 12


State 1

    6 function: error . '}'
   36 declaration: error . ';'

    ';'  shift, and go to state 13
    '}'  shift, and go to state 14


State 2

   14 type: K_INT .

    $default  reduce using rule 14 (type)


State 3

   15 type: K_FLOAT .

    $default  reduce using rule 15 (type)


State 4

   16 type: K_CHAR .

    $default  reduce using rule 16 (type)


State 5

   17 type: K_BOOL .

    $default  reduce using rule 17 (type)


State 6

   18 type: K_SET . DOUBLE_BR_OP type DOUBLE_BR_CL

    DOUBLE_BR_OP  shift, and go to state 15


State 7

   19 type: K_PAIR . DOUBLE_BR_OP type ',' type DOUBLE_BR_CL

    DOUBLE_BR_OP  shift, and go to state 16


State 8

    0 $accept: program . $end

    $end  shift, and go to state 17


State 9

    1 program: outset .
    2 outset: outset . function

    error    shift, and go to state 18
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    $end  reduce using rule 1 (program)

    function  go to state 19
    type      go to state 20


State 10

    4 outset: function .

    $default  reduce using rule 4 (outset)


State 11

    5 function: type . ID '(' arglist ')' compoundstmt
   34 declaration: type . attr
   35            | type . identlist

    ID  shift, and go to state 21

    $default  reduce using rule 46 (identlist)

    attr           go to state 22
    identlist      go to state 23
    identlistlist  go to state 24


State 12

    3 outset: declaration . ';'

    ';'  shift, and go to state 25


State 13

   36 declaration: error ';' .

    $default  reduce using rule 36 (declaration)


State 14

    6 function: error '}' .

    $default  reduce using rule 6 (function)


State 15

   18 type: K_SET DOUBLE_BR_OP . type DOUBLE_BR_CL

    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    type  go to state 26


State 16

   19 type: K_PAIR DOUBLE_BR_OP . type ',' type DOUBLE_BR_CL

    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    type  go to state 27


State 17

    0 $accept: program $end .

    $default  accept


State 18

    6 function: error . '}'

    '}'  shift, and go to state 14


State 19

    2 outset: outset function .

    $default  reduce using rule 2 (outset)


State 20

    5 function: type . ID '(' arglist ')' compoundstmt

    ID  shift, and go to state 28


State 21

    5 function: type ID . '(' arglist ')' compoundstmt
   44 attr: ID . '=' expr
   48 identlistlist: ID .

    '('  shift, and go to state 29
    '='  shift, and go to state 30

    $default  reduce using rule 48 (identlistlist)


State 22

   34 declaration: type attr .

    $default  reduce using rule 34 (declaration)


State 23

   35 declaration: type identlist .
   47 identlistlist: identlist . ',' ID

    ','  shift, and go to state 31

    $default  reduce using rule 35 (declaration)


State 24

   45 identlist: identlistlist .

    $default  reduce using rule 45 (identlist)


State 25

    3 outset: declaration ';' .

    $default  reduce using rule 3 (outset)


State 26

   18 type: K_SET DOUBLE_BR_OP type . DOUBLE_BR_CL

    DOUBLE_BR_CL  shift, and go to state 32


State 27

   19 type: K_PAIR DOUBLE_BR_OP type . ',' type DOUBLE_BR_CL

    ','  shift, and go to state 33


State 28

    5 function: type ID . '(' arglist ')' compoundstmt

    '('  shift, and go to state 29


State 29

    5 function: type ID '(' . arglist ')' compoundstmt

    error    shift, and go to state 34
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    ')'  reduce using rule 8 (arglist)
    ','  reduce using rule 8 (arglist)

    arglist      go to state 35
    arglistlist  go to state 36
    arg          go to state 37
    type         go to state 38


State 30

   44 attr: ID '=' . expr

    ID           shift, and go to state 39
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    expr            go to state 50
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 31

   47 identlistlist: identlist ',' . ID

    ID  shift, and go to state 62


State 32

   18 type: K_SET DOUBLE_BR_OP type DOUBLE_BR_CL .

    $default  reduce using rule 18 (type)


State 33

   19 type: K_PAIR DOUBLE_BR_OP type ',' . type DOUBLE_BR_CL

    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    type  go to state 63


State 34

   12 arg: error . ' '

    ' '  shift, and go to state 64


State 35

    5 function: type ID '(' arglist . ')' compoundstmt
    9 arglistlist: arglist . ',' arg

    ')'  shift, and go to state 65
    ','  shift, and go to state 66


State 36

    7 arglist: arglistlist .

    $default  reduce using rule 7 (arglist)


State 37

   10 arglistlist: arg .

    $default  reduce using rule 10 (arglistlist)


State 38

   11 arg: type . ID

    ID  shift, and go to state 67


State 39

   44 attr: ID . '=' expr
   79 factor: ID .
   88 funccall: ID . '(' identlist ')'

    '('  shift, and go to state 68
    '='  shift, and go to state 30

    $default  reduce using rule 79 (factor)


State 40

   80 factor: BOOL_VALUE .

    $default  reduce using rule 80 (factor)


State 41

   81 factor: INT_VALUE .

    $default  reduce using rule 81 (factor)


State 42

   82 factor: FLOAT_VALUE .

    $default  reduce using rule 82 (factor)


State 43

   83 factor: CHAR_VALUE .

    $default  reduce using rule 83 (factor)


State 44

   71 term: '(' . expr ')'
   77     | '(' . pair ')'

    ID           shift, and go to state 39
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    expr            go to state 69
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 70
    pair            go to state 71
    funccall        go to state 61


State 45

   76 term: '{' . factorlist '}'

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43

    $default  reduce using rule 86 (factorlist)

    factor      go to state 73
    factorlist  go to state 74


State 46

   73 term: '+' . term

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    term    go to state 75
    factor  go to state 60


State 47

   72 term: '-' . term

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    term    go to state 76
    factor  go to state 60


State 48

   74 term: '$' . term

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    term    go to state 77
    factor  go to state 60


State 49

   75 term: '!' . term

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    term    go to state 78
    factor  go to state 60


State 50

   44 attr: ID '=' expr .

    $default  reduce using rule 44 (attr)


State 51

   41 expr: attr .

    $default  reduce using rule 41 (expr)


State 52

   42 expr: rvalue .
   49 rvalue: rvalue . compare logicalor

    COMPARE     shift, and go to state 79
    DIFFERENCE  shift, and go to state 80
    LE          shift, and go to state 81
    GE          shift, and go to state 82
    '<'         shift, and go to state 83
    '>'         shift, and go to state 84

    $default  reduce using rule 42 (expr)

    compare  go to state 85


State 53

   50 rvalue: logicalor .

    $default  reduce using rule 50 (rvalue)


State 54

   57 logicalor: logicaland . LOGICAL_OR logicalor
   58          | logicaland .

    LOGICAL_OR  shift, and go to state 86

    $default  reduce using rule 58 (logicalor)


State 55

   59 logicaland: pertinence . LOGICAL_AND logicaland
   60           | pertinence .
   61 pertinence: pertinence . PERTINENCE cartesian

    LOGICAL_AND  shift, and go to state 87
    PERTINENCE   shift, and go to state 88

    $default  reduce using rule 60 (logicaland)


State 56

   62 pertinence: cartesian .
   63 cartesian: cartesian . CARTESIAN addition

    CARTESIAN  shift, and go to state 89

    $default  reduce using rule 62 (pertinence)


State 57

   64 cartesian: addition .
   65 addition: addition . '+' multiplication
   66         | addition . '-' multiplication

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91

    $default  reduce using rule 64 (cartesian)


State 58

   67 addition: multiplication .
   68 multiplication: multiplication . '*' term
   69               | multiplication . '/' term

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93

    $default  reduce using rule 67 (addition)


State 59

   70 multiplication: term .

    $default  reduce using rule 70 (multiplication)


State 60

   78 term: factor .

    $default  reduce using rule 78 (term)


State 61

   43 expr: funccall .

    $default  reduce using rule 43 (expr)


State 62

   47 identlistlist: identlist ',' ID .

    $default  reduce using rule 47 (identlistlist)


State 63

   19 type: K_PAIR DOUBLE_BR_OP type ',' type . DOUBLE_BR_CL

    DOUBLE_BR_CL  shift, and go to state 94


State 64

   12 arg: error ' ' .

    $default  reduce using rule 12 (arg)


State 65

    5 function: type ID '(' arglist ')' . compoundstmt

    '{'  shift, and go to state 95

    compoundstmt  go to state 96


State 66

    9 arglistlist: arglist ',' . arg

    error    shift, and go to state 34
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    arg   go to state 97
    type  go to state 38


State 67

   11 arg: type ID .

    $default  reduce using rule 11 (arg)


State 68

   88 funccall: ID '(' . identlist ')'

    ID  shift, and go to state 98

    $default  reduce using rule 46 (identlist)

    identlist      go to state 99
    identlistlist  go to state 24


State 69

   71 term: '(' expr . ')'

    ')'  shift, and go to state 100


State 70

   78 term: factor .
   87 pair: factor . ',' factor

    ','  shift, and go to state 101

    $default  reduce using rule 78 (term)


State 71

   77 term: '(' pair . ')'

    ')'  shift, and go to state 102


State 72

   79 factor: ID .

    $default  reduce using rule 79 (factor)


State 73

   85 factorlist: factor .

    $default  reduce using rule 85 (factorlist)


State 74

   76 term: '{' factorlist . '}'
   84 factorlist: factorlist . ',' factor

    '}'  shift, and go to state 103
    ','  shift, and go to state 104


State 75

   73 term: '+' term .

    $default  reduce using rule 73 (term)


State 76

   72 term: '-' term .

    $default  reduce using rule 72 (term)


State 77

   74 term: '$' term .

    $default  reduce using rule 74 (term)


State 78

   75 term: '!' term .

    $default  reduce using rule 75 (term)


State 79

   51 compare: COMPARE .

    $default  reduce using rule 51 (compare)


State 80

   56 compare: DIFFERENCE .

    $default  reduce using rule 56 (compare)


State 81

   54 compare: LE .

    $default  reduce using rule 54 (compare)


State 82

   55 compare: GE .

    $default  reduce using rule 55 (compare)


State 83

   52 compare: '<' .

    $default  reduce using rule 52 (compare)


State 84

   53 compare: '>' .

    $default  reduce using rule 53 (compare)


State 85

   49 rvalue: rvalue compare . logicalor

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    logicalor       go to state 105
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60


State 86

   57 logicalor: logicaland LOGICAL_OR . logicalor

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    logicalor       go to state 106
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60


State 87

   59 logicaland: pertinence LOGICAL_AND . logicaland

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    logicaland      go to state 107
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60


State 88

   61 pertinence: pertinence PERTINENCE . cartesian

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    cartesian       go to state 108
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60


State 89

   63 cartesian: cartesian CARTESIAN . addition

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    addition        go to state 109
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60


State 90

   65 addition: addition '+' . multiplication

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    multiplication  go to state 110
    term            go to state 59
    factor          go to state 60


State 91

   66 addition: addition '-' . multiplication

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    multiplication  go to state 111
    term            go to state 59
    factor          go to state 60


State 92

   68 multiplication: multiplication '*' . term

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    term    go to state 112
    factor  go to state 60


State 93

   69 multiplication: multiplication '/' . term

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    term    go to state 113
    factor  go to state 60


State 94

   19 type: K_PAIR DOUBLE_BR_OP type ',' type DOUBLE_BR_CL .

    $default  reduce using rule 19 (type)


State 95

   13 compoundstmt: '{' . stmtlist '}'

    error        shift, and go to state 114
    ID           shift, and go to state 39
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 115
    K_IF         shift, and go to state 116
    K_PRINT      shift, and go to state 117
    K_READ       shift, and go to state 118
    K_RETURN     shift, and go to state 119
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 120
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    compoundstmt    go to state 121
    type            go to state 122
    stmtlist        go to state 123
    stmt            go to state 124
    whilestmt       go to state 125
    ifstmt          go to state 126
    declaration     go to state 127
    io              go to state 128
    returnstmt      go to state 129
    expr            go to state 130
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 96

    5 function: type ID '(' arglist ')' compoundstmt .

    $default  reduce using rule 5 (function)


State 97

    9 arglistlist: arglist ',' arg .

    $default  reduce using rule 9 (arglistlist)


State 98

   48 identlistlist: ID .

    $default  reduce using rule 48 (identlistlist)


State 99

   47 identlistlist: identlist . ',' ID
   88 funccall: ID '(' identlist . ')'

    ')'  shift, and go to state 131
    ','  shift, and go to state 31


State 100

   71 term: '(' expr ')' .

    $default  reduce using rule 71 (term)


State 101

   87 pair: factor ',' . factor

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43

    factor  go to state 132


State 102

   77 term: '(' pair ')' .

    $default  reduce using rule 77 (term)


State 103

   76 term: '{' factorlist '}' .

    $default  reduce using rule 76 (term)


State 104

   84 factorlist: factorlist ',' . factor

    ID           shift, and go to state 72
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43

    factor  go to state 133


State 105

   49 rvalue: rvalue compare logicalor .

    $default  reduce using rule 49 (rvalue)


State 106

   57 logicalor: logicaland LOGICAL_OR logicalor .

    $default  reduce using rule 57 (logicalor)


State 107

   59 logicaland: pertinence LOGICAL_AND logicaland .

    $default  reduce using rule 59 (logicaland)


State 108

   61 pertinence: pertinence PERTINENCE cartesian .
   63 cartesian: cartesian . CARTESIAN addition

    CARTESIAN  shift, and go to state 89

    $default  reduce using rule 61 (pertinence)


State 109

   63 cartesian: cartesian CARTESIAN addition .
   65 addition: addition . '+' multiplication
   66         | addition . '-' multiplication

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91

    $default  reduce using rule 63 (cartesian)


State 110

   65 addition: addition '+' multiplication .
   68 multiplication: multiplication . '*' term
   69               | multiplication . '/' term

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93

    $default  reduce using rule 65 (addition)


State 111

   66 addition: addition '-' multiplication .
   68 multiplication: multiplication . '*' term
   69               | multiplication . '/' term

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93

    $default  reduce using rule 66 (addition)


State 112

   68 multiplication: multiplication '*' term .

    $default  reduce using rule 68 (multiplication)


State 113

   69 multiplication: multiplication '/' term .

    $default  reduce using rule 69 (multiplication)


State 114

   30 whilestmt: error . '}'
   36 declaration: error . ';'

    ';'  shift, and go to state 13
    '}'  shift, and go to state 134


State 115

   29 whilestmt: K_WHILE . '(' expr ')' stmt

    '('  shift, and go to state 135


State 116

   31 ifstmt: K_IF . '(' expr ')' compoundstmt
   32       | K_IF . '(' expr ')' compoundstmt elsepart

    '('  shift, and go to state 136


State 117

   37 io: K_PRINT . '(' STR ')'
   38   | K_PRINT . '(' ID ')'

    '('  shift, and go to state 137


State 118

   39 io: K_READ . '(' ID ')'

    '('  shift, and go to state 138


State 119

   40 returnstmt: K_RETURN . expr

    ID           shift, and go to state 39
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    expr            go to state 139
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 120

   13 compoundstmt: '{' . stmtlist '}'
   76 term: '{' . factorlist '}'

    error        shift, and go to state 114
    ID           shift, and go to state 39
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 115
    K_IF         shift, and go to state 116
    K_PRINT      shift, and go to state 117
    K_READ       shift, and go to state 118
    K_RETURN     shift, and go to state 119
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 120
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    '}'  reduce using rule 86 (factorlist)
    ','  reduce using rule 86 (factorlist)

    compoundstmt    go to state 121
    type            go to state 122
    stmtlist        go to state 123
    stmt            go to state 124
    whilestmt       go to state 125
    ifstmt          go to state 126
    declaration     go to state 127
    io              go to state 128
    returnstmt      go to state 129
    expr            go to state 130
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 140
    factorlist      go to state 74
    funccall        go to state 61


State 121

   25 stmt: compoundstmt .

    $default  reduce using rule 25 (stmt)


State 122

   34 declaration: type . attr
   35            | type . identlist

    ID  shift, and go to state 141

    $default  reduce using rule 46 (identlist)

    attr           go to state 22
    identlist      go to state 23
    identlistlist  go to state 24


State 123

   13 compoundstmt: '{' stmtlist . '}'

    '}'  shift, and go to state 142


State 124

   20 stmtlist: stmt . stmtlist
   21         | stmt .

    error        shift, and go to state 114
    ID           shift, and go to state 39
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 115
    K_IF         shift, and go to state 116
    K_PRINT      shift, and go to state 117
    K_READ       shift, and go to state 118
    K_RETURN     shift, and go to state 119
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 120
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    '}'  reduce using rule 21 (stmtlist)

    compoundstmt    go to state 121
    type            go to state 122
    stmtlist        go to state 143
    stmt            go to state 124
    whilestmt       go to state 125
    ifstmt          go to state 126
    declaration     go to state 127
    io              go to state 128
    returnstmt      go to state 129
    expr            go to state 130
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 125

   22 stmt: whilestmt .

    $default  reduce using rule 22 (stmt)


State 126

   24 stmt: ifstmt .

    $default  reduce using rule 24 (stmt)


State 127

   26 stmt: declaration . ';'

    ';'  shift, and go to state 144


State 128

   27 stmt: io . ';'

    ';'  shift, and go to state 145


State 129

   28 stmt: returnstmt . ';'

    ';'  shift, and go to state 146


State 130

   23 stmt: expr . ';'

    ';'  shift, and go to state 147


State 131

   88 funccall: ID '(' identlist ')' .

    $default  reduce using rule 88 (funccall)


State 132

   87 pair: factor ',' factor .

    $default  reduce using rule 87 (pair)


State 133

   84 factorlist: factorlist ',' factor .

    $default  reduce using rule 84 (factorlist)


State 134

   30 whilestmt: error '}' .

    $default  reduce using rule 30 (whilestmt)


State 135

   29 whilestmt: K_WHILE '(' . expr ')' stmt

    ID           shift, and go to state 39
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    expr            go to state 148
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 136

   31 ifstmt: K_IF '(' . expr ')' compoundstmt
   32       | K_IF '(' . expr ')' compoundstmt elsepart

    ID           shift, and go to state 39
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    expr            go to state 149
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 137

   37 io: K_PRINT '(' . STR ')'
   38   | K_PRINT '(' . ID ')'

    STR  shift, and go to state 150
    ID   shift, and go to state 151


State 138

   39 io: K_READ '(' . ID ')'

    ID  shift, and go to state 152


State 139

   40 returnstmt: K_RETURN expr .

    $default  reduce using rule 40 (returnstmt)


State 140

   78 term: factor .
   85 factorlist: factor .

    '}'       reduce using rule 85 (factorlist)
    ','       reduce using rule 85 (factorlist)
    $default  reduce using rule 78 (term)


State 141

   44 attr: ID . '=' expr
   48 identlistlist: ID .

    '='  shift, and go to state 30

    $default  reduce using rule 48 (identlistlist)


State 142

   13 compoundstmt: '{' stmtlist '}' .

    $default  reduce using rule 13 (compoundstmt)


State 143

   20 stmtlist: stmt stmtlist .

    $default  reduce using rule 20 (stmtlist)


State 144

   26 stmt: declaration ';' .

    $default  reduce using rule 26 (stmt)


State 145

   27 stmt: io ';' .

    $default  reduce using rule 27 (stmt)


State 146

   28 stmt: returnstmt ';' .

    $default  reduce using rule 28 (stmt)


State 147

   23 stmt: expr ';' .

    $default  reduce using rule 23 (stmt)


State 148

   29 whilestmt: K_WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 153


State 149

   31 ifstmt: K_IF '(' expr . ')' compoundstmt
   32       | K_IF '(' expr . ')' compoundstmt elsepart

    ')'  shift, and go to state 154


State 150

   37 io: K_PRINT '(' STR . ')'

    ')'  shift, and go to state 155


State 151

   38 io: K_PRINT '(' ID . ')'

    ')'  shift, and go to state 156


State 152

   39 io: K_READ '(' ID . ')'

    ')'  shift, and go to state 157


State 153

   29 whilestmt: K_WHILE '(' expr ')' . stmt

    error        shift, and go to state 114
    ID           shift, and go to state 39
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 115
    K_IF         shift, and go to state 116
    K_PRINT      shift, and go to state 117
    K_READ       shift, and go to state 118
    K_RETURN     shift, and go to state 119
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 120
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    compoundstmt    go to state 121
    type            go to state 122
    stmt            go to state 158
    whilestmt       go to state 125
    ifstmt          go to state 126
    declaration     go to state 127
    io              go to state 128
    returnstmt      go to state 129
    expr            go to state 130
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 154

   31 ifstmt: K_IF '(' expr ')' . compoundstmt
   32       | K_IF '(' expr ')' . compoundstmt elsepart

    '{'  shift, and go to state 95

    compoundstmt  go to state 159


State 155

   37 io: K_PRINT '(' STR ')' .

    $default  reduce using rule 37 (io)


State 156

   38 io: K_PRINT '(' ID ')' .

    $default  reduce using rule 38 (io)


State 157

   39 io: K_READ '(' ID ')' .

    $default  reduce using rule 39 (io)


State 158

   29 whilestmt: K_WHILE '(' expr ')' stmt .

    $default  reduce using rule 29 (whilestmt)


State 159

   31 ifstmt: K_IF '(' expr ')' compoundstmt .
   32       | K_IF '(' expr ')' compoundstmt . elsepart

    K_ELSE  shift, and go to state 160

    $default  reduce using rule 31 (ifstmt)

    elsepart  go to state 161


State 160

   33 elsepart: K_ELSE . stmt

    error        shift, and go to state 114
    ID           shift, and go to state 39
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 115
    K_IF         shift, and go to state 116
    K_PRINT      shift, and go to state 117
    K_READ       shift, and go to state 118
    K_RETURN     shift, and go to state 119
    BOOL_VALUE   shift, and go to state 40
    INT_VALUE    shift, and go to state 41
    FLOAT_VALUE  shift, and go to state 42
    CHAR_VALUE   shift, and go to state 43
    '('          shift, and go to state 44
    '{'          shift, and go to state 120
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '$'          shift, and go to state 48
    '!'          shift, and go to state 49

    compoundstmt    go to state 121
    type            go to state 122
    stmt            go to state 162
    whilestmt       go to state 125
    ifstmt          go to state 126
    declaration     go to state 127
    io              go to state 128
    returnstmt      go to state 129
    expr            go to state 130
    attr            go to state 51
    rvalue          go to state 52
    logicalor       go to state 53
    logicaland      go to state 54
    pertinence      go to state 55
    cartesian       go to state 56
    addition        go to state 57
    multiplication  go to state 58
    term            go to state 59
    factor          go to state 60
    funccall        go to state 61


State 161

   32 ifstmt: K_IF '(' expr ')' compoundstmt elsepart .

    $default  reduce using rule 32 (ifstmt)


State 162

   33 elsepart: K_ELSE stmt .

    $default  reduce using rule 33 (elsepart)
