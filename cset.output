Grammar

    0 $accept: program $end

    1 program: outset

    2 outset: outset function
    3       | declaration ';'
    4       | function

    5 function: type ID '(' arglist ')' compoundstmt
    6         | error '}'

    7 arglist: arglistlist
    8        | %empty

    9 arglistlist: arglist ',' arg
   10            | arg

   11 arg: type ID
   12    | error ' '

   13 compoundstmt: '{' stmtlist '}'

   14 type: K_INT
   15     | K_FLOAT
   16     | K_CHAR
   17     | K_BOOL
   18     | K_SET DOUBLE_BR_OP type DOUBLE_BR_CL
   19     | K_PAIR DOUBLE_BR_OP type ',' type DOUBLE_BR_CL

   20 stmtlist: stmtlist stmt
   21         | stmt

   22 stmt: whilestmt
   23     | expr ';'
   24     | ifstmt
   25     | compoundstmt
   26     | declaration ';'
   27     | io ';'
   28     | returnstmt ';'

   29 whilestmt: K_WHILE '(' expr ')' stmt
   30          | error '}'

   31 ifstmt: K_IF '(' expr ')' compoundstmt
   32       | K_IF '(' expr ')' compoundstmt elsepart

   33 elsepart: K_ELSE stmt

   34 declaration: type attr
   35            | type identlist
   36            | error ';'

   37 io: K_PRINT '(' STR ')'
   38   | K_PRINT '(' ID ')'
   39   | K_READ '(' ID ')'

   40 returnstmt: K_RETURN expr

   41 expr: attr
   42     | rvalue
   43     | funccall

   44 attr: ID '=' expr

   45 identlist: identlist ',' ID
   46          | ID
   47          | %empty

   48 rvalue: rvalue compare logicalor
   49       | logicalor

   50 compare: COMPARE
   51        | '<'
   52        | '>'
   53        | LE
   54        | GE
   55        | DIFFERENCE

   56 logicalor: logicaland LOGICAL_OR logicalor
   57          | logicaland

   58 logicaland: pertinence LOGICAL_AND logicaland
   59           | pertinence

   60 pertinence: pertinence PERTINENCE cartesian
   61           | cartesian

   62 cartesian: cartesian CARTESIAN addition
   63          | addition

   64 addition: addition '+' multiplication
   65         | addition '-' multiplication
   66         | multiplication

   67 multiplication: multiplication '*' term
   68               | multiplication '/' term
   69               | term

   70 term: '(' expr ')'
   71     | '-' term
   72     | '+' term
   73     | '$' term
   74     | '!' term
   75     | '{' factorlist '}'
   76     | '(' pair ')'
   77     | factor

   78 factor: ID
   79       | BOOL_VALUE
   80       | INT_VALUE
   81       | FLOAT_VALUE
   82       | CHAR_VALUE

   83 factorlist: factorlist ',' factor
   84           | factor
   85           | %empty

   86 pair: factor ',' factor

   87 funccall: ID '(' identlist ')'


Terminals, with rules where they appear

$end (0) 0
' ' (32) 12
'!' (33) 74
'$' (36) 73
'(' (40) 5 29 31 32 37 38 39 70 76 87
')' (41) 5 29 31 32 37 38 39 70 76 87
'*' (42) 67
'+' (43) 64 72
',' (44) 9 19 45 83 86
'-' (45) 65 71
'/' (47) 68
';' (59) 3 23 26 27 28 36
'<' (60) 51
'=' (61) 44
'>' (62) 52
'{' (123) 13 75
'}' (125) 6 13 30 75
error (256) 6 12 30 36
STR (258) 37
ID (259) 5 11 38 39 44 45 46 78 87
K_INT (260) 14
K_FLOAT (261) 15
K_CHAR (262) 16
K_BOOL (263) 17
K_SET (264) 18
K_PAIR (265) 19
K_WHILE (266) 29
K_IF (267) 31 32
K_ELSE (268) 33
K_PRINT (269) 37 38
K_READ (270) 39
K_RETURN (271) 40
BOOL_VALUE (272) 79
INT_VALUE (273) 80
FLOAT_VALUE (274) 81
CHAR_VALUE (275) 82
DOUBLE_BR_OP (276) 18 19
DOUBLE_BR_CL (277) 18 19
COMPARE (278) 50
DIFFERENCE (279) 55
LE (280) 53
GE (281) 54
LOGICAL_OR (282) 56
LOGICAL_AND (283) 58
PERTINENCE (284) 60
CARTESIAN (285) 62


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
outset (49)
    on left: 2 3 4, on right: 1 2
function (50)
    on left: 5 6, on right: 2 4
arglist (51)
    on left: 7 8, on right: 5 9
arglistlist (52)
    on left: 9 10, on right: 7
arg (53)
    on left: 11 12, on right: 9 10
compoundstmt (54)
    on left: 13, on right: 5 25 31 32
type (55)
    on left: 14 15 16 17 18 19, on right: 5 11 18 19 34 35
stmtlist (56)
    on left: 20 21, on right: 13 20
stmt (57)
    on left: 22 23 24 25 26 27 28, on right: 20 21 29 33
whilestmt (58)
    on left: 29 30, on right: 22
ifstmt (59)
    on left: 31 32, on right: 24
elsepart (60)
    on left: 33, on right: 32
declaration (61)
    on left: 34 35 36, on right: 3 26
io (62)
    on left: 37 38 39, on right: 27
returnstmt (63)
    on left: 40, on right: 28
expr (64)
    on left: 41 42 43, on right: 23 29 31 32 40 44 70
attr (65)
    on left: 44, on right: 34 41
identlist (66)
    on left: 45 46 47, on right: 35 45 87
rvalue (67)
    on left: 48 49, on right: 42 48
compare (68)
    on left: 50 51 52 53 54 55, on right: 48
logicalor (69)
    on left: 56 57, on right: 48 49 56
logicaland (70)
    on left: 58 59, on right: 56 57 58
pertinence (71)
    on left: 60 61, on right: 58 59 60
cartesian (72)
    on left: 62 63, on right: 60 61 62
addition (73)
    on left: 64 65 66, on right: 62 63 64 65
multiplication (74)
    on left: 67 68 69, on right: 64 65 66 67 68
term (75)
    on left: 70 71 72 73 74 75 76 77, on right: 67 68 69 71 72 73 74
factor (76)
    on left: 78 79 80 81 82, on right: 77 83 84 86
factorlist (77)
    on left: 83 84 85, on right: 75 83
pair (78)
    on left: 86, on right: 76
funccall (79)
    on left: 87, on right: 43


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    program      go to state 8
    outset       go to state 9
    function     go to state 10
    type         go to state 11
    declaration  go to state 12


State 1

    6 function: error . '}'
   36 declaration: error . ';'

    ';'  shift, and go to state 13
    '}'  shift, and go to state 14


State 2

   14 type: K_INT .

    $default  reduce using rule 14 (type)


State 3

   15 type: K_FLOAT .

    $default  reduce using rule 15 (type)


State 4

   16 type: K_CHAR .

    $default  reduce using rule 16 (type)


State 5

   17 type: K_BOOL .

    $default  reduce using rule 17 (type)


State 6

   18 type: K_SET . DOUBLE_BR_OP type DOUBLE_BR_CL

    DOUBLE_BR_OP  shift, and go to state 15


State 7

   19 type: K_PAIR . DOUBLE_BR_OP type ',' type DOUBLE_BR_CL

    DOUBLE_BR_OP  shift, and go to state 16


State 8

    0 $accept: program . $end

    $end  shift, and go to state 17


State 9

    1 program: outset .
    2 outset: outset . function

    error    shift, and go to state 18
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    $end  reduce using rule 1 (program)

    function  go to state 19
    type      go to state 20


State 10

    4 outset: function .

    $default  reduce using rule 4 (outset)


State 11

    5 function: type . ID '(' arglist ')' compoundstmt
   34 declaration: type . attr
   35            | type . identlist

    ID  shift, and go to state 21

    $default  reduce using rule 47 (identlist)

    attr       go to state 22
    identlist  go to state 23


State 12

    3 outset: declaration . ';'

    ';'  shift, and go to state 24


State 13

   36 declaration: error ';' .

    $default  reduce using rule 36 (declaration)


State 14

    6 function: error '}' .

    $default  reduce using rule 6 (function)


State 15

   18 type: K_SET DOUBLE_BR_OP . type DOUBLE_BR_CL

    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    type  go to state 25


State 16

   19 type: K_PAIR DOUBLE_BR_OP . type ',' type DOUBLE_BR_CL

    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    type  go to state 26


State 17

    0 $accept: program $end .

    $default  accept


State 18

    6 function: error . '}'

    '}'  shift, and go to state 14


State 19

    2 outset: outset function .

    $default  reduce using rule 2 (outset)


State 20

    5 function: type . ID '(' arglist ')' compoundstmt

    ID  shift, and go to state 27


State 21

    5 function: type ID . '(' arglist ')' compoundstmt
   44 attr: ID . '=' expr
   46 identlist: ID .

    '('  shift, and go to state 28
    '='  shift, and go to state 29

    $default  reduce using rule 46 (identlist)


State 22

   34 declaration: type attr .

    $default  reduce using rule 34 (declaration)


State 23

   35 declaration: type identlist .
   45 identlist: identlist . ',' ID

    ','  shift, and go to state 30

    $default  reduce using rule 35 (declaration)


State 24

    3 outset: declaration ';' .

    $default  reduce using rule 3 (outset)


State 25

   18 type: K_SET DOUBLE_BR_OP type . DOUBLE_BR_CL

    DOUBLE_BR_CL  shift, and go to state 31


State 26

   19 type: K_PAIR DOUBLE_BR_OP type . ',' type DOUBLE_BR_CL

    ','  shift, and go to state 32


State 27

    5 function: type ID . '(' arglist ')' compoundstmt

    '('  shift, and go to state 28


State 28

    5 function: type ID '(' . arglist ')' compoundstmt

    error    shift, and go to state 33
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    ')'  reduce using rule 8 (arglist)
    ','  reduce using rule 8 (arglist)

    arglist      go to state 34
    arglistlist  go to state 35
    arg          go to state 36
    type         go to state 37


State 29

   44 attr: ID '=' . expr

    ID           shift, and go to state 38
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    expr            go to state 49
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 30

   45 identlist: identlist ',' . ID

    ID  shift, and go to state 61


State 31

   18 type: K_SET DOUBLE_BR_OP type DOUBLE_BR_CL .

    $default  reduce using rule 18 (type)


State 32

   19 type: K_PAIR DOUBLE_BR_OP type ',' . type DOUBLE_BR_CL

    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    type  go to state 62


State 33

   12 arg: error . ' '

    ' '  shift, and go to state 63


State 34

    5 function: type ID '(' arglist . ')' compoundstmt
    9 arglistlist: arglist . ',' arg

    ')'  shift, and go to state 64
    ','  shift, and go to state 65


State 35

    7 arglist: arglistlist .

    $default  reduce using rule 7 (arglist)


State 36

   10 arglistlist: arg .

    $default  reduce using rule 10 (arglistlist)


State 37

   11 arg: type . ID

    ID  shift, and go to state 66


State 38

   44 attr: ID . '=' expr
   78 factor: ID .
   87 funccall: ID . '(' identlist ')'

    '('  shift, and go to state 67
    '='  shift, and go to state 29

    $default  reduce using rule 78 (factor)


State 39

   79 factor: BOOL_VALUE .

    $default  reduce using rule 79 (factor)


State 40

   80 factor: INT_VALUE .

    $default  reduce using rule 80 (factor)


State 41

   81 factor: FLOAT_VALUE .

    $default  reduce using rule 81 (factor)


State 42

   82 factor: CHAR_VALUE .

    $default  reduce using rule 82 (factor)


State 43

   70 term: '(' . expr ')'
   76     | '(' . pair ')'

    ID           shift, and go to state 38
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    expr            go to state 68
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 69
    pair            go to state 70
    funccall        go to state 60


State 44

   75 term: '{' . factorlist '}'

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42

    $default  reduce using rule 85 (factorlist)

    factor      go to state 72
    factorlist  go to state 73


State 45

   72 term: '+' . term

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    term    go to state 74
    factor  go to state 59


State 46

   71 term: '-' . term

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    term    go to state 75
    factor  go to state 59


State 47

   73 term: '$' . term

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    term    go to state 76
    factor  go to state 59


State 48

   74 term: '!' . term

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    term    go to state 77
    factor  go to state 59


State 49

   44 attr: ID '=' expr .

    $default  reduce using rule 44 (attr)


State 50

   41 expr: attr .

    $default  reduce using rule 41 (expr)


State 51

   42 expr: rvalue .
   48 rvalue: rvalue . compare logicalor

    COMPARE     shift, and go to state 78
    DIFFERENCE  shift, and go to state 79
    LE          shift, and go to state 80
    GE          shift, and go to state 81
    '<'         shift, and go to state 82
    '>'         shift, and go to state 83

    $default  reduce using rule 42 (expr)

    compare  go to state 84


State 52

   49 rvalue: logicalor .

    $default  reduce using rule 49 (rvalue)


State 53

   56 logicalor: logicaland . LOGICAL_OR logicalor
   57          | logicaland .

    LOGICAL_OR  shift, and go to state 85

    $default  reduce using rule 57 (logicalor)


State 54

   58 logicaland: pertinence . LOGICAL_AND logicaland
   59           | pertinence .
   60 pertinence: pertinence . PERTINENCE cartesian

    LOGICAL_AND  shift, and go to state 86
    PERTINENCE   shift, and go to state 87

    $default  reduce using rule 59 (logicaland)


State 55

   61 pertinence: cartesian .
   62 cartesian: cartesian . CARTESIAN addition

    CARTESIAN  shift, and go to state 88

    $default  reduce using rule 61 (pertinence)


State 56

   63 cartesian: addition .
   64 addition: addition . '+' multiplication
   65         | addition . '-' multiplication

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    $default  reduce using rule 63 (cartesian)


State 57

   66 addition: multiplication .
   67 multiplication: multiplication . '*' term
   68               | multiplication . '/' term

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 66 (addition)


State 58

   69 multiplication: term .

    $default  reduce using rule 69 (multiplication)


State 59

   77 term: factor .

    $default  reduce using rule 77 (term)


State 60

   43 expr: funccall .

    $default  reduce using rule 43 (expr)


State 61

   45 identlist: identlist ',' ID .

    $default  reduce using rule 45 (identlist)


State 62

   19 type: K_PAIR DOUBLE_BR_OP type ',' type . DOUBLE_BR_CL

    DOUBLE_BR_CL  shift, and go to state 93


State 63

   12 arg: error ' ' .

    $default  reduce using rule 12 (arg)


State 64

    5 function: type ID '(' arglist ')' . compoundstmt

    '{'  shift, and go to state 94

    compoundstmt  go to state 95


State 65

    9 arglistlist: arglist ',' . arg

    error    shift, and go to state 33
    K_INT    shift, and go to state 2
    K_FLOAT  shift, and go to state 3
    K_CHAR   shift, and go to state 4
    K_BOOL   shift, and go to state 5
    K_SET    shift, and go to state 6
    K_PAIR   shift, and go to state 7

    arg   go to state 96
    type  go to state 37


State 66

   11 arg: type ID .

    $default  reduce using rule 11 (arg)


State 67

   87 funccall: ID '(' . identlist ')'

    ID  shift, and go to state 97

    $default  reduce using rule 47 (identlist)

    identlist  go to state 98


State 68

   70 term: '(' expr . ')'

    ')'  shift, and go to state 99


State 69

   77 term: factor .
   86 pair: factor . ',' factor

    ','  shift, and go to state 100

    $default  reduce using rule 77 (term)


State 70

   76 term: '(' pair . ')'

    ')'  shift, and go to state 101


State 71

   78 factor: ID .

    $default  reduce using rule 78 (factor)


State 72

   84 factorlist: factor .

    $default  reduce using rule 84 (factorlist)


State 73

   75 term: '{' factorlist . '}'
   83 factorlist: factorlist . ',' factor

    '}'  shift, and go to state 102
    ','  shift, and go to state 103


State 74

   72 term: '+' term .

    $default  reduce using rule 72 (term)


State 75

   71 term: '-' term .

    $default  reduce using rule 71 (term)


State 76

   73 term: '$' term .

    $default  reduce using rule 73 (term)


State 77

   74 term: '!' term .

    $default  reduce using rule 74 (term)


State 78

   50 compare: COMPARE .

    $default  reduce using rule 50 (compare)


State 79

   55 compare: DIFFERENCE .

    $default  reduce using rule 55 (compare)


State 80

   53 compare: LE .

    $default  reduce using rule 53 (compare)


State 81

   54 compare: GE .

    $default  reduce using rule 54 (compare)


State 82

   51 compare: '<' .

    $default  reduce using rule 51 (compare)


State 83

   52 compare: '>' .

    $default  reduce using rule 52 (compare)


State 84

   48 rvalue: rvalue compare . logicalor

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    logicalor       go to state 104
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59


State 85

   56 logicalor: logicaland LOGICAL_OR . logicalor

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    logicalor       go to state 105
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59


State 86

   58 logicaland: pertinence LOGICAL_AND . logicaland

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    logicaland      go to state 106
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59


State 87

   60 pertinence: pertinence PERTINENCE . cartesian

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    cartesian       go to state 107
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59


State 88

   62 cartesian: cartesian CARTESIAN . addition

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    addition        go to state 108
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59


State 89

   64 addition: addition '+' . multiplication

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    multiplication  go to state 109
    term            go to state 58
    factor          go to state 59


State 90

   65 addition: addition '-' . multiplication

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    multiplication  go to state 110
    term            go to state 58
    factor          go to state 59


State 91

   67 multiplication: multiplication '*' . term

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    term    go to state 111
    factor  go to state 59


State 92

   68 multiplication: multiplication '/' . term

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    term    go to state 112
    factor  go to state 59


State 93

   19 type: K_PAIR DOUBLE_BR_OP type ',' type DOUBLE_BR_CL .

    $default  reduce using rule 19 (type)


State 94

   13 compoundstmt: '{' . stmtlist '}'

    error        shift, and go to state 113
    ID           shift, and go to state 38
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 114
    K_IF         shift, and go to state 115
    K_PRINT      shift, and go to state 116
    K_READ       shift, and go to state 117
    K_RETURN     shift, and go to state 118
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 119
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    compoundstmt    go to state 120
    type            go to state 121
    stmtlist        go to state 122
    stmt            go to state 123
    whilestmt       go to state 124
    ifstmt          go to state 125
    declaration     go to state 126
    io              go to state 127
    returnstmt      go to state 128
    expr            go to state 129
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 95

    5 function: type ID '(' arglist ')' compoundstmt .

    $default  reduce using rule 5 (function)


State 96

    9 arglistlist: arglist ',' arg .

    $default  reduce using rule 9 (arglistlist)


State 97

   46 identlist: ID .

    $default  reduce using rule 46 (identlist)


State 98

   45 identlist: identlist . ',' ID
   87 funccall: ID '(' identlist . ')'

    ')'  shift, and go to state 130
    ','  shift, and go to state 30


State 99

   70 term: '(' expr ')' .

    $default  reduce using rule 70 (term)


State 100

   86 pair: factor ',' . factor

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42

    factor  go to state 131


State 101

   76 term: '(' pair ')' .

    $default  reduce using rule 76 (term)


State 102

   75 term: '{' factorlist '}' .

    $default  reduce using rule 75 (term)


State 103

   83 factorlist: factorlist ',' . factor

    ID           shift, and go to state 71
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42

    factor  go to state 132


State 104

   48 rvalue: rvalue compare logicalor .

    $default  reduce using rule 48 (rvalue)


State 105

   56 logicalor: logicaland LOGICAL_OR logicalor .

    $default  reduce using rule 56 (logicalor)


State 106

   58 logicaland: pertinence LOGICAL_AND logicaland .

    $default  reduce using rule 58 (logicaland)


State 107

   60 pertinence: pertinence PERTINENCE cartesian .
   62 cartesian: cartesian . CARTESIAN addition

    CARTESIAN  shift, and go to state 88

    $default  reduce using rule 60 (pertinence)


State 108

   62 cartesian: cartesian CARTESIAN addition .
   64 addition: addition . '+' multiplication
   65         | addition . '-' multiplication

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    $default  reduce using rule 62 (cartesian)


State 109

   64 addition: addition '+' multiplication .
   67 multiplication: multiplication . '*' term
   68               | multiplication . '/' term

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 64 (addition)


State 110

   65 addition: addition '-' multiplication .
   67 multiplication: multiplication . '*' term
   68               | multiplication . '/' term

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 65 (addition)


State 111

   67 multiplication: multiplication '*' term .

    $default  reduce using rule 67 (multiplication)


State 112

   68 multiplication: multiplication '/' term .

    $default  reduce using rule 68 (multiplication)


State 113

   30 whilestmt: error . '}'
   36 declaration: error . ';'

    ';'  shift, and go to state 13
    '}'  shift, and go to state 133


State 114

   29 whilestmt: K_WHILE . '(' expr ')' stmt

    '('  shift, and go to state 134


State 115

   31 ifstmt: K_IF . '(' expr ')' compoundstmt
   32       | K_IF . '(' expr ')' compoundstmt elsepart

    '('  shift, and go to state 135


State 116

   37 io: K_PRINT . '(' STR ')'
   38   | K_PRINT . '(' ID ')'

    '('  shift, and go to state 136


State 117

   39 io: K_READ . '(' ID ')'

    '('  shift, and go to state 137


State 118

   40 returnstmt: K_RETURN . expr

    ID           shift, and go to state 38
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    expr            go to state 138
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 119

   13 compoundstmt: '{' . stmtlist '}'
   75 term: '{' . factorlist '}'

    error        shift, and go to state 113
    ID           shift, and go to state 38
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 114
    K_IF         shift, and go to state 115
    K_PRINT      shift, and go to state 116
    K_READ       shift, and go to state 117
    K_RETURN     shift, and go to state 118
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 119
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    '}'  reduce using rule 85 (factorlist)
    ','  reduce using rule 85 (factorlist)

    compoundstmt    go to state 120
    type            go to state 121
    stmtlist        go to state 122
    stmt            go to state 123
    whilestmt       go to state 124
    ifstmt          go to state 125
    declaration     go to state 126
    io              go to state 127
    returnstmt      go to state 128
    expr            go to state 129
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 139
    factorlist      go to state 73
    funccall        go to state 60


State 120

   25 stmt: compoundstmt .

    $default  reduce using rule 25 (stmt)


State 121

   34 declaration: type . attr
   35            | type . identlist

    ID  shift, and go to state 140

    $default  reduce using rule 47 (identlist)

    attr       go to state 22
    identlist  go to state 23


State 122

   13 compoundstmt: '{' stmtlist . '}'
   20 stmtlist: stmtlist . stmt

    error        shift, and go to state 113
    ID           shift, and go to state 38
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 114
    K_IF         shift, and go to state 115
    K_PRINT      shift, and go to state 116
    K_READ       shift, and go to state 117
    K_RETURN     shift, and go to state 118
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '}'          shift, and go to state 141
    '{'          shift, and go to state 119
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    compoundstmt    go to state 120
    type            go to state 121
    stmt            go to state 142
    whilestmt       go to state 124
    ifstmt          go to state 125
    declaration     go to state 126
    io              go to state 127
    returnstmt      go to state 128
    expr            go to state 129
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 123

   21 stmtlist: stmt .

    $default  reduce using rule 21 (stmtlist)


State 124

   22 stmt: whilestmt .

    $default  reduce using rule 22 (stmt)


State 125

   24 stmt: ifstmt .

    $default  reduce using rule 24 (stmt)


State 126

   26 stmt: declaration . ';'

    ';'  shift, and go to state 143


State 127

   27 stmt: io . ';'

    ';'  shift, and go to state 144


State 128

   28 stmt: returnstmt . ';'

    ';'  shift, and go to state 145


State 129

   23 stmt: expr . ';'

    ';'  shift, and go to state 146


State 130

   87 funccall: ID '(' identlist ')' .

    $default  reduce using rule 87 (funccall)


State 131

   86 pair: factor ',' factor .

    $default  reduce using rule 86 (pair)


State 132

   83 factorlist: factorlist ',' factor .

    $default  reduce using rule 83 (factorlist)


State 133

   30 whilestmt: error '}' .

    $default  reduce using rule 30 (whilestmt)


State 134

   29 whilestmt: K_WHILE '(' . expr ')' stmt

    ID           shift, and go to state 38
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    expr            go to state 147
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 135

   31 ifstmt: K_IF '(' . expr ')' compoundstmt
   32       | K_IF '(' . expr ')' compoundstmt elsepart

    ID           shift, and go to state 38
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 44
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    expr            go to state 148
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 136

   37 io: K_PRINT '(' . STR ')'
   38   | K_PRINT '(' . ID ')'

    STR  shift, and go to state 149
    ID   shift, and go to state 150


State 137

   39 io: K_READ '(' . ID ')'

    ID  shift, and go to state 151


State 138

   40 returnstmt: K_RETURN expr .

    $default  reduce using rule 40 (returnstmt)


State 139

   77 term: factor .
   84 factorlist: factor .

    '}'       reduce using rule 84 (factorlist)
    ','       reduce using rule 84 (factorlist)
    $default  reduce using rule 77 (term)


State 140

   44 attr: ID . '=' expr
   46 identlist: ID .

    '='  shift, and go to state 29

    $default  reduce using rule 46 (identlist)


State 141

   13 compoundstmt: '{' stmtlist '}' .

    $default  reduce using rule 13 (compoundstmt)


State 142

   20 stmtlist: stmtlist stmt .

    $default  reduce using rule 20 (stmtlist)


State 143

   26 stmt: declaration ';' .

    $default  reduce using rule 26 (stmt)


State 144

   27 stmt: io ';' .

    $default  reduce using rule 27 (stmt)


State 145

   28 stmt: returnstmt ';' .

    $default  reduce using rule 28 (stmt)


State 146

   23 stmt: expr ';' .

    $default  reduce using rule 23 (stmt)


State 147

   29 whilestmt: K_WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 152


State 148

   31 ifstmt: K_IF '(' expr . ')' compoundstmt
   32       | K_IF '(' expr . ')' compoundstmt elsepart

    ')'  shift, and go to state 153


State 149

   37 io: K_PRINT '(' STR . ')'

    ')'  shift, and go to state 154


State 150

   38 io: K_PRINT '(' ID . ')'

    ')'  shift, and go to state 155


State 151

   39 io: K_READ '(' ID . ')'

    ')'  shift, and go to state 156


State 152

   29 whilestmt: K_WHILE '(' expr ')' . stmt

    error        shift, and go to state 113
    ID           shift, and go to state 38
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 114
    K_IF         shift, and go to state 115
    K_PRINT      shift, and go to state 116
    K_READ       shift, and go to state 117
    K_RETURN     shift, and go to state 118
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 119
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    compoundstmt    go to state 120
    type            go to state 121
    stmt            go to state 157
    whilestmt       go to state 124
    ifstmt          go to state 125
    declaration     go to state 126
    io              go to state 127
    returnstmt      go to state 128
    expr            go to state 129
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 153

   31 ifstmt: K_IF '(' expr ')' . compoundstmt
   32       | K_IF '(' expr ')' . compoundstmt elsepart

    '{'  shift, and go to state 94

    compoundstmt  go to state 158


State 154

   37 io: K_PRINT '(' STR ')' .

    $default  reduce using rule 37 (io)


State 155

   38 io: K_PRINT '(' ID ')' .

    $default  reduce using rule 38 (io)


State 156

   39 io: K_READ '(' ID ')' .

    $default  reduce using rule 39 (io)


State 157

   29 whilestmt: K_WHILE '(' expr ')' stmt .

    $default  reduce using rule 29 (whilestmt)


State 158

   31 ifstmt: K_IF '(' expr ')' compoundstmt .
   32       | K_IF '(' expr ')' compoundstmt . elsepart

    K_ELSE  shift, and go to state 159

    $default  reduce using rule 31 (ifstmt)

    elsepart  go to state 160


State 159

   33 elsepart: K_ELSE . stmt

    error        shift, and go to state 113
    ID           shift, and go to state 38
    K_INT        shift, and go to state 2
    K_FLOAT      shift, and go to state 3
    K_CHAR       shift, and go to state 4
    K_BOOL       shift, and go to state 5
    K_SET        shift, and go to state 6
    K_PAIR       shift, and go to state 7
    K_WHILE      shift, and go to state 114
    K_IF         shift, and go to state 115
    K_PRINT      shift, and go to state 116
    K_READ       shift, and go to state 117
    K_RETURN     shift, and go to state 118
    BOOL_VALUE   shift, and go to state 39
    INT_VALUE    shift, and go to state 40
    FLOAT_VALUE  shift, and go to state 41
    CHAR_VALUE   shift, and go to state 42
    '('          shift, and go to state 43
    '{'          shift, and go to state 119
    '+'          shift, and go to state 45
    '-'          shift, and go to state 46
    '$'          shift, and go to state 47
    '!'          shift, and go to state 48

    compoundstmt    go to state 120
    type            go to state 121
    stmt            go to state 161
    whilestmt       go to state 124
    ifstmt          go to state 125
    declaration     go to state 126
    io              go to state 127
    returnstmt      go to state 128
    expr            go to state 129
    attr            go to state 50
    rvalue          go to state 51
    logicalor       go to state 52
    logicaland      go to state 53
    pertinence      go to state 54
    cartesian       go to state 55
    addition        go to state 56
    multiplication  go to state 57
    term            go to state 58
    factor          go to state 59
    funccall        go to state 60


State 160

   32 ifstmt: K_IF '(' expr ')' compoundstmt elsepart .

    $default  reduce using rule 32 (ifstmt)


State 161

   33 elsepart: K_ELSE stmt .

    $default  reduce using rule 33 (elsepart)
